/*
소멸자(destructor)
    객체의 수명이 끝나면 컴파일러에 의해 자동으로 호출되며, 사용이 끝난 객체를 정리해 줍니다.
    소멸자의 이름은 해당 클래스의 이름과 같으며, 이름 앞에 물결 표시 "~"를 붙여 생성자와 구분합니다.

    소멸자의 특징 
        1. 소멸자는 인수를 가지지 않습니다.
        2. 소멸자는 반환값이 없지만 void형으로 선언하지 않습니다.
        3. 객체는 여러 개의 생성자를 가질 수 있지만, 소멸자는 단 하나만 가질 수 있습니다.
        4. 소멸자는 const, volatile 또는 static으로 선언될 수는 없지만, const, volatile 또는 static으로 선언된 객체의 소멸을 위해서 호출될 수는 있습니다.
        
    소멸자가 호출되는 시기
        데이터(data) 영역	해당 프로그램이 종료될 때
        스택(stack) 영역    해당 객체가 정의된 블록을 벗어날 때
        힙(heap) 영역	    delete를 사용하여 해당 객체의 메모리를 반환할 때
        임시 객체	        임시 객체의 사용을 마쳤을 때
*/
#include <iostream>

class Player
{
public:
    ~Player()
    {
        std::cout << "소멸자 호출" << std::endl;
    }
};

int main()
{
    Player player;

    return 0;
}